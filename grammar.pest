// tokens
alpha = { 'a'..'z' | 'A'..'Z' }
digit = { '0'..'9' }
plus = { "+" }
minus = { "-" }
mult ={ "*" }
div ={ "/" }
pw = { "^" }
lparen = { "(" }
rparen = { ")" }
underscore = { "_" }
lbracket = { "{" }
rbracket = { "}" }
listsep = { "," }

// identifiers and constants
identifier = { underscore* ~ alpha+ ~ (alpha | digit)+ }
numeric_constant = { digit+ }

// strings (fucking complicated)
string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

// expressions
expr = { sum }
sum = { product ~ ((plus | minus) ~ product)*}
product = { power ~ ((mult | div) ~ power)*}
power = { value ~ (pw ~ power)? }
value = { numeric_constant | identifier | lparen ~ expr ~ rparen }


// packet body
packet_keyword = { "packet" }
packet = { packet_keyword ~ ident ~ lbracket ~ rules ~ rbracket }
rules = { (rule ~ listsep*)* }
rule = { 
    
}