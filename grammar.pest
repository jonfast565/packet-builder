// whitespace 
WHITESPACE = _{ " " | "\n" | "\r\n" | "\t" }

// tokens
alpha = @{ 'a'..'z' | 'A'..'Z' }
digit = @{ '0'..'9' }
plus = @{ "+" }
minus = @{ "-" }
mult = @{ "*" }
div = @{ "/" }
pw = @{ "^" }
lparen = @{ "(" }
rparen = @{ ")" }
underscore = @{ "_" }
lbracket = @{ "{" }
rbracket = @{ "}" }
listsep = @{ "," }
larray = @{ "[" }
rarray = @{ "]" }
sumof = @ { "sumof" }
productof = @ { "productof" }

// identifiers and constants
identifier = @{ (underscore | alpha){1} ~ (alpha | digit | underscore)* }
numeric_constant = @{ digit+ }

// strings (fucking complicated)
string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

// types
int8 = @{"int8"}
uint8 = @{"uint8"}
int16 = @{"int16"}
uint16 = @{"uint16"}
int32 = @{"int32"}
uint32 = @{"uint32"}
int64 = @{"int64"}
uint64 = @{"uint64"}
float32 = @{"float32"}
float64 = @{"float64"}
macaddress = @{"macaddress"}
datetime = @{"datetime"}
type_name = @{ int8 | uint8 | int16 | uint16 | int32 | uint32 | int64 | uint64 | float32 | float64 | macaddress | datetime }

// packet keywords
packet_keyword = @{ "packet" }
calculated_keyword = @{ "calc" }

// expressions
expr = { sum }
sum = { product ~ ((plus | minus) ~ product)*}
product = { power ~ ((mult | div) ~ power)*}
power = { value ~ (pw ~ power)? }
value = { numeric_constant | accessor | lparen ~ expr ~ rparen }

// declaring and accessing variables
declaration = { identifier ~ type_name ~ array_specifier? }
accessor = {  (sumof | productof) ~ identifier ~ !array_specifier | identifier ~ array_specifier? }
array_specifier = { larray ~ numeric_constant ~ rarray }

// packet body
packets = { SOI ~ packet+ ~ EOI }
packet = { packet_keyword ~ identifier ~ lbracket ~ rule_list ~ rbracket }
rule_list = { rule ~ (listsep ~ rule)* }
rule = { declaration | calculated_field }
calculated_field = { calculated_keyword ~ identifier ~ expr }